2024-05-16 07:29:41,502 INFO    MainThread:74134 [wandb_setup.py:_flush():76] Configure stats pid to 74134
2024-05-16 07:29:41,502 INFO    MainThread:74134 [wandb_setup.py:_flush():76] Loading settings from /Users/lisa/.config/wandb/settings
2024-05-16 07:29:41,502 INFO    MainThread:74134 [wandb_setup.py:_flush():76] Loading settings from /Users/lisa/Documents/atari/wandb/settings
2024-05-16 07:29:41,502 INFO    MainThread:74134 [wandb_setup.py:_flush():76] Loading settings from environment variables: {}
2024-05-16 07:29:41,502 INFO    MainThread:74134 [wandb_setup.py:_flush():76] Applying setup settings: {'_disable_service': False}
2024-05-16 07:29:41,502 INFO    MainThread:74134 [wandb_setup.py:_flush():76] Inferring run settings from compute environment: {'program_relpath': 'environment_test.py', 'program': '/Users/lisa/Documents/atari/environment_test.py'}
2024-05-16 07:29:41,502 INFO    MainThread:74134 [wandb_init.py:_log_setup():506] Logging user logs to /Users/lisa/Documents/atari/wandb/run-20240516_072941-cd8gzmvd/logs/debug.log
2024-05-16 07:29:41,502 INFO    MainThread:74134 [wandb_init.py:_log_setup():507] Logging internal logs to /Users/lisa/Documents/atari/wandb/run-20240516_072941-cd8gzmvd/logs/debug-internal.log
2024-05-16 07:29:41,502 INFO    MainThread:74134 [wandb_init.py:init():546] calling init triggers
2024-05-16 07:29:41,502 INFO    MainThread:74134 [wandb_init.py:init():552] wandb.init called with sweep_config: {}
config: {}
2024-05-16 07:29:41,502 INFO    MainThread:74134 [wandb_init.py:init():602] starting backend
2024-05-16 07:29:41,502 INFO    MainThread:74134 [wandb_init.py:init():606] setting up manager
2024-05-16 07:29:41,506 INFO    MainThread:74134 [backend.py:_multiprocessing_setup():106] multiprocessing start_methods=spawn,fork,forkserver, using: spawn
2024-05-16 07:29:41,509 INFO    MainThread:74134 [wandb_init.py:init():613] backend started and connected
2024-05-16 07:29:41,511 INFO    MainThread:74134 [wandb_init.py:init():701] updated telemetry
2024-05-16 07:29:41,512 INFO    MainThread:74134 [wandb_init.py:init():741] communicating run to backend with 60.0 second timeout
2024-05-16 07:29:41,884 INFO    MainThread:74134 [wandb_run.py:_on_init():2131] communicating current version
2024-05-16 07:29:41,998 INFO    MainThread:74134 [wandb_run.py:_on_init():2140] got version response upgrade_message: "wandb version 0.17.0 is available!  To upgrade, please run:\n $ pip install wandb --upgrade"

2024-05-16 07:29:41,998 INFO    MainThread:74134 [wandb_init.py:init():789] starting run threads in backend
2024-05-16 07:29:49,494 INFO    MainThread:74134 [wandb_run.py:_console_start():2112] atexit reg
2024-05-16 07:29:49,495 INFO    MainThread:74134 [wandb_run.py:_redirect():1967] redirect: SettingsConsole.WRAP_RAW
2024-05-16 07:29:49,495 INFO    MainThread:74134 [wandb_run.py:_redirect():2032] Wrapping output streams.
2024-05-16 07:29:49,495 INFO    MainThread:74134 [wandb_run.py:_redirect():2057] Redirects installed.
2024-05-16 07:29:49,495 INFO    MainThread:74134 [wandb_init.py:init():831] run started, returning control to user process
2024-05-16 07:29:49,694 INFO    MainThread:74134 [wandb_run.py:_tensorboard_callback():1394] tensorboard callback: ./dqn_tensorboard/DQN_1, True
2024-05-16 07:29:49,697 INFO    MainThread:74134 [wandb_watch.py:watch():51] Watching
2024-05-16 07:29:49,697 INFO    MainThread:74134 [wandb_run.py:_config_callback():1249] config_cb None None {'algo': 'DQN', 'policy_class': "<class 'stable_baselines3.dqn.policies.CnnPolicy'>", 'device': 'cpu', 'verbose': 1, 'policy_kwargs': '{}', 'num_timesteps': 0, '_total_timesteps': 25000, '_num_timesteps_at_start': 0, 'seed': 'None', 'action_noise': 'None', 'start_time': 1715837389688411000, 'learning_rate': 0.0001, 'tensorboard_log': './dqn_tensorboard/', '_last_obs': '[[[[0 0 0 ... 0 0 0]\n   [0 0 0 ... 0 0 0]\n   [0 0 0 ... 0 0 0]\n   ...\n   [0 0 0 ... 0 0 0]\n   [0 0 0 ... 0 0 0]\n   [0 0 0 ... 0 0 0]]\n\n  [[0 0 0 ... 0 0 0]\n   [0 0 0 ... 0 0 0]\n   [0 0 0 ... 0 0 0]\n   ...\n   [0 0 0 ... 0 0 0]\n   [0 0 0 ... 0 0 0]\n   [0 0 0 ... 0 0 0]]\n\n  [[0 0 0 ... 0 0 0]\n   [0 0 0 ... 0 0 0]\n   [0 0 0 ... 0 0 0]\n   ...\n   [0 0 0 ... 0 0 0]\n   [0 0 0 ... 0 0 0]\n   [0 0 0 ... 0 0 0]]]]', '_last_episode_starts': '[ True]', '_last_original_obs': 'None', '_episode_num': 0, 'use_sde': 'False', 'sde_sample_freq': -1, '_current_progress_remaining': 1.0, '_stats_window_size': 100, 'ep_info_buffer': 'deque([], maxlen=100)', 'ep_success_buffer': 'deque([], maxlen=100)', '_n_updates': 0, '_custom_logger': 'False', 'env': '<stable_baselines3.common.vec_env.vec_transpose.VecTransposeImage object at 0x160da6350>', '_vec_normalize_env': 'None', 'observation_space': 'Box(0, 255, (3, 210, 160), uint8)', 'action_space': 'Discrete(18)', 'n_envs': 1, 'buffer_size': 1000000, 'batch_size': 32, 'learning_starts': 50000, 'tau': 1.0, 'gamma': 0.99, 'gradient_steps': 1, 'optimize_memory_usage': 'False', 'replay_buffer': '<stable_baselines3.common.buffers.ReplayBuffer object at 0x161c60df0>', 'replay_buffer_class': "<class 'stable_baselines3.common.buffers.ReplayBuffer'>", 'replay_buffer_kwargs': '{}', '_episode_storage': 'None', 'train_freq': "TrainFreq(frequency=4, unit=<TrainFrequencyUnit.STEP: 'step'>)", 'use_sde_at_warmup': 'False', 'exploration_initial_eps': 1.0, 'exploration_final_eps': 0.05, 'exploration_fraction': 0.1, 'target_update_interval': 10000, '_n_calls': 0, 'max_grad_norm': 10, 'exploration_rate': 0.0, 'lr_schedule': '<function constant_fn.<locals>.func at 0x312c77be0>', 'policy': 'CnnPolicy(\n  (q_net): QNetwork(\n    (features_extractor): NatureCNN(\n      (cnn): Sequential(\n        (0): Conv2d(3, 32, kernel_size=(8, 8), stride=(4, 4))\n        (1): ReLU()\n        (2): Conv2d(32, 64, kernel_size=(4, 4), stride=(2, 2))\n        (3): ReLU()\n        (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1))\n        (5): ReLU()\n        (6): Flatten(start_dim=1, end_dim=-1)\n      )\n      (linear): Sequential(\n        (0): Linear(in_features=22528, out_features=512, bias=True)\n        (1): ReLU()\n      )\n    )\n    (q_net): Sequential(\n      (0): Linear(in_features=512, out_features=18, bias=True)\n    )\n  )\n  (q_net_target): QNetwork(\n    (features_extractor): NatureCNN(\n      (cnn): Sequential(\n        (0): Conv2d(3, 32, kernel_size=(8, 8), stride=(4, 4))\n        (1): ReLU()\n        (2): Conv2d(32, 64, kernel_size=(4, 4), stride=(2, 2))\n        (3): ReLU()\n        (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1))\n        (5): ReLU()\n        (6): Flatten(start_dim=1, end_dim=-1)\n      )\n      (linear): Sequential(\n        (0): Linear(in_features=22528, out_features=512, bias=True)\n        (1): ReLU()\n      )\n    )\n    (q_net): Sequential(\n      (0): Linear(in_features=512, out_features=18, bias=True)\n    )\n  )\n)', 'q_net': 'QNetwork(\n  (features_extractor): NatureCNN(\n    (cnn): Sequential(\n      (0): Conv2d(3, 32, kernel_size=(8, 8), stride=(4, 4))\n      (1): ReLU()\n      (2): Conv2d(32, 64, kernel_size=(4, 4), stride=(2, 2))\n      (3): ReLU()\n      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1))\n      (5): ReLU()\n      (6): Flatten(start_dim=1, end_dim=-1)\n    )\n    (linear): Sequential(\n      (0): Linear(in_features=22528, out_features=512, bias=True)\n      (1): ReLU()\n    )\n  )\n  (q_net): Sequential(\n    (0): Linear(in_features=512, out_features=18, bias=True)\n  )\n)', 'q_net_target': 'QNetwork(\n  (features_extractor): NatureCNN(\n    (cnn): Sequential(\n      (0): Conv2d(3, 32, kernel_size=(8, 8), stride=(4, 4))\n      (1): ReLU()\n      (2): Conv2d(32, 64, kernel_size=(4, 4), stride=(2, 2))\n      (3): ReLU()\n      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1))\n      (5): ReLU()\n      (6): Flatten(start_dim=1, end_dim=-1)\n    )\n    (linear): Sequential(\n      (0): Linear(in_features=22528, out_features=512, bias=True)\n      (1): ReLU()\n    )\n  )\n  (q_net): Sequential(\n    (0): Linear(in_features=512, out_features=18, bias=True)\n  )\n)', 'batch_norm_stats': '[]', 'batch_norm_stats_target': '[]', 'exploration_schedule': '<function get_linear_fn.<locals>.func at 0x312ca7370>', '_logger': '<stable_baselines3.common.logger.Logger object at 0x312ca38e0>'}
2024-05-16 07:30:04,415 INFO    MainThread:74134 [sb3.py:save_model():153] Saving model checkpoint to ./models/ALE/DonkeyKong-v5/model.zip
2024-05-16 07:33:44,287 WARNING MsgRouterThr:74134 [router.py:message_loop():77] message_loop has been closed
